#
## Load docker image
#
FROM tatsy/ubuntu-cxx

#
## Environment variables
#
ENV CC @TRAVIS_C_COMPILER@
ENV CXX @TRAVIS_CXX_COMPILER@

#
## Install Gcovr
#
RUN apt-get -qq install python-pip
RUN pip install gcovr

#
## Install cppcheck and cccc
#
RUN apt-get -qq install cppcheck cccc

#
## Install freeglut and glew
#
RUN apt-get -qq install freeglut3 freeglut3-dev libglew-dev libglew1.5
RUN apt-get -qq install libxmu-dev libxi-dev

#
## Install Google Test
#
RUN git clone --depth=1 -b release-1.7.0 https://github.com/google/googletest.git /usr/src/gtest
RUN \
  cd /usr/src/gtest && \
  cmake . && \
  cmake --build . && \
  mkdir -p /usr/local/lib && \
  mkdir -p /usr/include && \
  mv libg* /usr/local/lib && \
  mv include/* /usr/include && \
  cd /
ENV GTEST_LIBRARY /usr/local/lib/libgtest.a
ENV GTEST_MAIN_LIBRARY /usr/local/lib/libgtest_main.a
ENV GTEST_INCLUDE_DIRS /usr/include

#
## Build spica
#
RUN git clone --depth 10 -b develop https://github.com/tatsy/spica.git
RUN \
  cd spica && \
  cmake . && \
  cmake --build .

#
## # of threads used by OpenMP
#
ENV OMP_NUM_THREADS 4

#
## Define working direcotry
#
WORKDIR /root/spica

#
## Run unit tests
#
RUN lcov --directory . --zerocounters
RUN CTEST_OUTOUT_ON_FAILURE=TRUE make check

#
## Collect coverage data
#
RUN if [ $CXX = "g++"     ]; then lcov --directory . --capture --output-file coverage.info; fi
RUN if [ $CXX = "clang++" ]; then lcov --directory . --capture --output-file coverage.info --gcov-tool llvm-cov-3.5; fi
RUN lcov --remove coverage.info '3rdparty/*' 'src/renderer/*' 'src/viewer/*' 'test/*' 'example/*' '/usr/*' 'CMakeFiles/*' --output-file coverage.info
RUN lcov --list coverage.info
